name: Pull Latest Image and Run AWS Inspector Scan
on:
  workflow_dispatch:

jobs:
  pull-latest-and-inspect:
    name: Pull Latest Image and Run Amazon Inspector Scan
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      CI_COMMIT_MESSAGE: New AWS Inspector
      CI_COMMIT_AUTHOR: Continuous Integration
    strategy:
      matrix:
        ecr-repo: 
          - repo1
          - repo2
          - repo3
      max-parallel: 1
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3  # This ensures the repo is correctly initialized

      - name: Git Global Config
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "actions@github.com"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@main
        with:
          aws-access-key-id: ${{ secrets.DEVOPS_AUTOMATION_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEVOPS_AUTOMATION_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to  ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEVOPS_AUTOMATION_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEVOPS_AUTOMATION_AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --endpoint-url https://ecr-fips.us-east-1.amazonaws.com --region us-east-1 | \
          docker login --username AWS --password-stdin ############.dkr.ecr-fips.us-east-1.amazonaws.com/repo1

      - name: Retrieve Latest Image Tag from ECR
        id: ecr-describe-images
        run: |
          IMAGE_TAG=$(aws ecr describe-images \
            --repository-name ${{ matrix.ecr-repo }} \
            --query 'sort_by(imageDetails,&imagePushedAt)[-1].imageTags[0]' \
            --output text)

          IMAGE_TAG=$(echo $IMAGE_TAG | head -n1)

          echo "IMAGE_TAG is: $IMAGE_TAG"

          if [ -z "$IMAGE_TAG" ] || [ "$IMAGE_TAG" == "None" ]; then
            echo "Error: IMAGE_TAG is empty or invalid. Exiting..."
            exit 1
          else
            echo "LATEST_IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          fi

      - name: Get Current Year and Month for Folder Structure
        id: date
        run: |
          YEAR=$(date +'%Y')
          MONTH=$(date +'%m')
          echo "YEAR=${YEAR}" >> $GITHUB_ENV
          echo "MONTH=${MONTH}" >> $GITHUB_ENV

      - name: Ensure Directory for Amazon Inspector Scan Exists with Repo Folder Structure
        run: |
          mkdir -p evidence-artifacts/federal/aws/inspector/${{ env.YEAR }}/${{ env.MONTH }}/${{ matrix.ecr-repo }}

      - name: Run Amazon Inspector Vulnerability Scan
        uses: aws-actions/vulnerability-scan-github-action-for-amazon-inspector@v1
        with:
          aws-access-key-id: ${{ secrets.DEVOPS_AUTOMATION_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEVOPS_AUTOMATION_AWS_SECRET_ACCESS_KEY }}
          ecr-repository-name: ${{ matrix.ecr-repo }}
          image-tag: ${{ env.LATEST_IMAGE_TAG }}
          display_vulnerability_findings: "enabled"
          output_inspector_scan_path_csv: evidence-artifacts/federal/aws/inspector/${{ env.YEAR }}/${{ env.MONTH }}/${{ matrix.ecr-repo }}/inspector-results-${{ matrix.ecr-repo }}-${{ env.LATEST_IMAGE_TAG }}.csv
          inspector_scan_results_csv: evidence-artifacts/federal/aws/inspector/${{ env.YEAR }}/${{ env.MONTH }}/${{ matrix.ecr-repo }}/inspector-results-${{ matrix.ecr-repo }}-${{ env.LATEST_IMAGE_TAG }}.csv
          critical_threshold: 1
          high_threshold: 1
          medium_threshold: 1
          low_threshold: 1
          other_threshold: 0

      - name: Move misplaced files to the correct directory with Repo Folder Structure
        run: |
          mkdir -p evidence-artifacts/federal/aws/inspector/${{ env.YEAR }}/${{ env.MONTH }}/${{ matrix.ecr-repo }}
          mv inspector_* evidence-artifacts/federal/aws/inspector/${{ env.YEAR }}/${{ env.MONTH }}/${{ matrix.ecr-repo }}/ || true
          mv sbom_* evidence-artifacts/federal/aws/inspector/${{ env.YEAR }}/${{ env.MONTH }}/${{ matrix.ecr-repo }}/ || true

      - name: Add output files & Status
        run: |
          git add .
          git status

      - name: Commit changes & Push to origin/main
        run: |
          git commit --verbose -a -m "${{ env.CI_COMMIT_MESSAGE }}" || echo "No changes to commit"
          git push origin ${{ github.ref_name }} --force --verbose
