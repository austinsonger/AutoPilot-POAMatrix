Plugin ID,CVE,CVSS,Risk,Host,Protocol,Port,Name,Synopsis,Description,Solution,See Also,Plugin Output,Asset UUID,Vulnerability State,IP Address,FQDN,NetBios,OS,MAC Address,Plugin Family,CVSS Base Score,CVSS Temporal Score,CVSS Temporal Vector,CVSS Vector,CVSS3 Base Score,CVSS3 Temporal Score,CVSS3 Temporal Vector,CVSS3 Vector,System Type,Host Start,Host End,Vulnerability Priority Rating (VPR),First Found,Last Found,Host Scan Schedule ID,Host Scan ID,Indexed At,Last Authenticated Results Date,Last Unauthenticated Results Date,Tracked,Risk Factor,Severity,Original Severity,Modification,Plugin Family ID,Plugin Type,Plugin Version,Service,Plugin Modification Date,Plugin Publication Date,Checks for Malware,Exploit Available,Exploited by Malware,Exploited by Nessus,CANVAS,D2 Elliot,Metasploit,Core Exploits,ExploitHub,Default Account,Patch Available,In The News,Unsupported By Vendor,Last Fixed
72426,,0,Medium,amazon aws,tcp,0,Amazon AWS Compliance Checks,Compliance checks for Amazon Web Services.,"""4.6 Ensure AWS Management Console authentication failures are monitored: [WARNING]""

Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs, or an external Security information and event management (SIEM) environment, and establishing corresponding metric filters and alarms.

It is recommended that a metric filter and alarm be established for failed console authentication attempts.

Rationale:

CloudWatch is an AWS native service that allows you to observe and monitor resources and applications. CloudTrail Logs can also be sent to an external Security information and event management (SIEM) environment for monitoring and alerting.

Monitoring failed console logins may decrease lead time to detect an attempt to brute force a credential, which may provide an indicator, such as source IP address, that can be used in other event correlation.

Impact:

Monitoring for these failures may create a large number of alerts, more so in larger environments.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance.

Solution:
If you are using CloudTrails and CloudWatch, perform the following to setup the metric filter, alarm, SNS topic, and subscription:

Create a metric filter based on filter pattern provided which checks for AWS management Console Login Failures and the <cloudtrail_log_group_name> taken from audit step 1.

aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name> --filter-name  '<console_signin_failure_metric>'  --metric-transformations metricName= '<console_signin_failure_metric>' ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventName = ConsoleLogin) && ($.errorMessage = 'Failed authentication') }'

Note: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.

Create an SNS topic that the alarm will notify

aws sns create-topic --name <sns_topic_name>

Note: you can execute this command once and then re-use the same topic for all monitoring alarms.

Create an SNS subscription to the topic created in step 2

aws sns subscribe --topic-arn <sns_topic_arn> --protocol <protocol_for_sns> --notification-endpoint <sns_subscription_endpoints>

Note: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.

Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2

aws cloudwatch put-metric-alarm --alarm-name  '<console_signin_failure_alarm>'  --metric-name  '<console_signin_failure_metric>'  --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions <sns_topic_arn>

See Also:
https://workbench.cisecurity.org/benchmarks/14207

Reference:
800-171|3.3.1, 800-171|3.3.2, 800-171|3.3.6, 800-53|AU-6, 800-53|AU-6(1), 800-53|AU-7(1), 800-53r5|AU-6, 800-53r5|AU-6(1), 800-53r5|AU-7(1), CCE|CCE-79191-3, CN-L3|7.1.2.3(c), CN-L3|7.1.3.3(d), CSCv7|16, CSCv8|8.11, CSF|DE.AE-2, CSF|DE.AE-3, CSF|DE.DP-4, CSF|PR.PT-1, CSF|RS.AN-1, CSF|RS.AN-3, CSF|RS.CO-2, GDPR|32.1.b, HIPAA|164.306(a)(1), HIPAA|164.312(b), ITSG-33|AU-6, ITSG-33|AU-6(1), ITSG-33|AU-7(1), LEVEL|2M, NESA|M5.2.5, QCSC-v1|5.2.3, QCSC-v1|8.2.1, QCSC-v1|10.2.1, QCSC-v1|11.2, QCSC-v1|13.2, SWIFT-CSCv1|6.4

Policy Value:
WARNING

Actual Value:
WARNING",N/A,,,d01bf204-427a-5177-a7b5-6da1c76f8dcd,,,amazon aws,,,,Policy Compliance,0,0,,,0,0,,,,2024-10-01T09:00:16.032Z,2024-10-01T09:10:27.157Z,null,,,template-5c9b270a-a184-2ba3-22de-3a8c0221d4daad6b27cc0b518808,1bc01c9b-fef6-43b8-a79e-1b876b79ace5,2024-10-01T09:11:31.837Z,,,FALSE,None,null,null,,39,local,$Revision: 1.475 $,,2024-09-26T00:00:00Z,2014-04-15T00:00:00Z,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,
72426,,0,Medium,amazon aws,tcp,0,Amazon AWS Compliance Checks,Compliance checks for Amazon Web Services.,"""2.1.3 Ensure all data in Amazon S3 has been discovered, classified and secured when required.: [WARNING]""

Amazon S3 buckets can contain sensitive data, that for security purposes should be discovered, monitored, classified and protected. Macie along with other 3rd party tools can automatically provide an inventory of Amazon S3 buckets.

Rationale:

Using a Cloud service or 3rd Party software to continuously monitor and automate the process of data discovery and classification for S3 buckets using machine learning and pattern matching is a strong defense in protecting that information.

Amazon Macie is a fully managed data security and data privacy service that uses machine learning and pattern matching to discover and protect your sensitive data in AWS.

Impact:

There is a cost associated with using Amazon Macie. There is also typically a cost associated with 3rd Party tools that perform similar processes and protection.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance.

Solution:
Perform the steps below to enable and configure Amazon Macie
From Console:

Log on to the Macie console at https://console.aws.amazon.com/macie/

Click Get started.

Click Enable Macie.

Setup a repository for sensitive data discovery results

In the Left pane, under Settings, click Discovery results.

Make sure Create bucket is selected.

Create a bucket, enter a name for the bucket. The name must be unique across all S3 buckets. In addition, the name must start with a lowercase letter or a number.

Click on Advanced.

Block all public access, make sure Yes is selected.

KMS encryption, specify the AWS KMS key that you want to use to encrypt the results. The key must be a symmetric, customer master key (CMK) that's in the same Region as the S3 bucket.

Click on Save

Create a job to discover sensitive data

In the left pane, click S3 buckets. Macie displays a list of all the S3 buckets for your account.

Select the check box for each bucket that you want Macie to analyze as part of the job

Click Create job.

Click Quick create.

For the Name and description step, enter a name and, optionally, a description of the job.

Then click Next.

For the Review and create step, click Submit.

Review your findings

In the left pane, click Findings.

To view the details of a specific finding, choose any field other than the check box for the finding.

If you are using a 3rd Party tool to manage and protect your s3 data, follow the Vendor documentation for implementing and configuring that tool.

See Also:
https://workbench.cisecurity.org/benchmarks/14207

Reference:
800-53|AU-11, 800-53|SI-12, 800-53r5|AU-11, 800-53r5|SI-12, CSCv7|5.1, CSCv8|3.1, CSF|PR.PT-1, GDPR|32.1.b, HIPAA|164.306(a)(1), HIPAA|164.312(b), ITSG-33|AU-11, ITSG-33|SI-12, ITSG-33|SI-12a., LEVEL|2M, NESA|M5.2.3, NESA|M5.2.4, NESA|M5.3.1, NESA|T3.6.2, NIAv2|DR1, NIAv2|DR1a, NIAv2|DR1b, NIAv2|DR1c, NIAv2|DR2, NIAv2|DR3, NIAv2|DR4, NIAv2|DR5, NIAv2|DR6, NIAv2|SM7, PCI-DSSv3.2.1|3.1, PCI-DSSv3.2.1|10.7, PCI-DSSv4.0|3.2.1, PCI-DSSv4.0|10.5.1, QCSC-v1|8.2.1, QCSC-v1|13.2

Policy Value:
WARNING

Actual Value:
WARNING",N/A,,,d01bf204-427a-5177-a7b5-6da1c76f8dcd,,,amazon aws,,,,Policy Compliance,0,0,,,0,0,,,,2024-10-01T09:00:16.032Z,2024-10-01T09:10:27.157Z,null,,,template-5c9b270a-a184-2ba3-22de-3a8c0221d4daad6b27cc0b518808,1bc01c9b-fef6-43b8-a79e-1b876b79ace5,2024-10-01T09:11:31.843Z,,,FALSE,None,null,null,,39,local,$Revision: 1.475 $,,2024-09-26T00:00:00Z,2014-04-15T00:00:00Z,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,
72426,,0,High,amazon aws,tcp,0,Amazon AWS Compliance Checks,Compliance checks for Amazon Web Services.,"""3.3 Ensure AWS Config is enabled in all regions: [FAILED]""

AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.

Rationale:

The AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.

Impact:

It is recommended AWS Config be enabled in all regions.

Solution:
To implement AWS Config configuration:
From Console:

Select the region you want to focus on in the top right of the console

Click Services

Click Config

If a Config recorder is enabled in this region, you should navigate to the Settings page from the navigation menu on the left hand side. If a Config recorder is not yet enabled in this region then you should select 'Get Started'.

Select 'Record all resources supported in this region'

Choose to include global resources (IAM resources)

Specify an S3 bucket in the same account or in another managed AWS account

Create an SNS Topic from the same AWS account or another managed AWS account

From Command Line:

Ensure there is an appropriate S3 bucket, SNS topic, and IAM role per the AWS Config Service prerequisites.

Run this command to create a new configuration recorder:

aws configservice put-configuration-recorder --configuration-recorder name=default,roleARN=arn:aws:iam::012345678912:role/myConfigRole --recording-group allSupported=true,includeGlobalResourceTypes=true

Create a delivery channel configuration file locally which specifies the channel attributes, populated from the prerequisites set up previously:

{
  'name': 'default',
  's3BucketName': 'my-config-bucket',
  'snsTopicARN': 'arn:aws:sns:us-east-1:012345678912:my-config-notice',
  'configSnapshotDeliveryProperties': {
    'deliveryFrequency': 'Twelve_Hours'
  }
}

Run this command to create a new delivery channel, referencing the json configuration file made in the previous step:

aws configservice put-delivery-channel --delivery-channel file://deliveryChannel.json

Start the configuration recorder by running the following command:

aws configservice start-configuration-recorder --configuration-recorder-name default

See Also:
https://workbench.cisecurity.org/benchmarks/14207

Reference:
800-171|3.4.1, 800-53|CM-8, 800-53|CM-8(1), 800-53|PM-5, 800-53r5|CM-8, 800-53r5|CM-8(1), 800-53r5|PM-5, CCE|CCE-78917-2, CN-L3|8.1.10.2(a), CN-L3|8.1.10.2(b), CSCv7|1.4, CSCv7|11.2, CSCv7|16.1, CSCv8|1.1, CSF|DE.CM-7, CSF|ID.AM-1, CSF|ID.AM-2, CSF|PR.DS-3, GDPR|32.1.b, GDPR|32.1.d, HIPAA|164.306(a)(1), ITSG-33|CM-8, ITSG-33|CM-8(1), LEVEL|2A, NESA|T1.2.1, NESA|T1.2.2, QCSC-v1|3.2, QCSC-v1|5.2.2, QCSC-v1|5.2.3, QCSC-v1|6.2, QCSC-v1|8.2.1

Policy Value:
FAILED

Actual Value:
All of the following must pass to satisfy this requirement:

-------------------------
FAILED - 'Record all resources supported in this region'
ap-northeast-1:
  No lines matching regex found. 
ap-northeast-2:
  No lines matching regex found. 
ap-northeast-3:
  No lines matching regex found. 
ap-south-1:
  No lines matching regex found. 
eu-north-1:
  No lines matching regex found. 
eu-west-1:
  No lines matching regex found. 
sa-east-1:
  No lines matching regex found. 
us-east-1:
  No lines matching expect found. 
us-west-1:
  No lines matching regex found. 
us-west-2:
  No lines matching regex found. 

ap-northeast-1:
  No matches found.
ap-northeast-2:
  No matches found.
ap-northeast-3:
  No matches found.
ap-south-1:
  No matches found.
ap-southeast-1:
  Name: default - Record all resources supported in this region = true
ap-southeast-2:
  Name: default - Record all resources supported in this region = true
ca-central-1:
  Name: default - Record all resources supported in this region = true
eu-central-1:
  Name: default - Record all resources supported in this region = true
eu-north-1:
  No matches found.
eu-west-1:
  No matches found.
eu-west-2:
  Name: default - Record all resources supported in this region = true
eu-west-3:
  Name: default - Record all resources supported in this region = true
sa-east-1:
  No matches found.
us-east-1:
  Name: security-config-recorder - Record all resources supported in this region = false
us-east-2:
  Name: default - Record all resources supported in this region = true
us-west-1:
  No matches found.
us-west-2:
  No matches found.


-------------------------
FAILED - 'Include global resources'
ap-northeast-1:
No lines matching regex found. 
ap-northeast-2:
No lines matching regex found. 
ap-northeast-3:
No lines matching regex found. 
ap-south-1:
No lines matching regex found. 
ap-southeast-1:
No lines matching expect found. 
ap-southeast-2:
No lines matching expect found. 
ca-central-1:
No lines matching expect found. 
eu-central-1:
No lines matching expect found. 
eu-north-1:
No lines matching regex found. 
eu-west-1:
No lines matching regex found. 
eu-west-2:
No lines matching expect found. 
eu-west-3:
No lines matching expect found. 
sa-east-1:
No lines matching regex found. 
us-east-1:
No lines matching expect found. 
us-east-2:
No lines matching expect found. 
us-west-1:
No lines matching regex found. 
us-west-2:
No lines matching regex found. 

ap-northeast-1:
No matches found.
ap-northeast-2:
No matches found.
ap-northeast-3:
No matches found.
ap-south-1:
No matches found.
ap-southeast-1:
Name: default - Include global resources = false
ap-southeast-2:
Name: default - Include global resources = false
ca-central-1:
Name: default - Include global resources = false
eu-central-1:
Name: default - Include global resources = false
eu-north-1:
No matches found.
eu-west-1:
No matches found.
eu-west-2:
Name: default - Include global resources = false
eu-west-3:
Name: default - Include global resources = false
sa-east-1:
No matches found.
us-east-1:
Name: security-config-recorder - Include global resources = false
us-east-2:
Name: default - Include global resources = false
us-west-1:
No matches found.
us-west-2:
No matches found.


-------------------------
FAILED - 'Recording Status'
ap-northeast-1:
  No lines matching regex found. 
ap-northeast-2:
  No lines matching regex found. 
ap-northeast-3:
  No lines matching regex found. 
ap-south-1:
  No lines matching regex found. 
ap-southeast-1:
  No lines matching expect found. 
ap-southeast-2:
  No lines matching expect found. 
ca-central-1:
  No lines matching expect found. 
eu-central-1:
  No lines matching expect found. 
eu-north-1:
  No lines matching regex found. 
eu-west-1:
  No lines matching regex found. 
eu-west-2:
  No lines matching expect found. 
eu-west-3:
  No lines matching expect found. 
sa-east-1:
  No lines matching regex found. 
us-east-1:
  No lines matching expect found. 
us-west-1:
  No lines matching regex found. 
us-west-2:
  No lines matching regex found. 

ap-northeast-1:
  No matches found.
ap-northeast-2:
  No matches found.
ap-northeast-3:
  No matches found.
ap-south-1:
  No matches found.
ap-southeast-1:
  default - Recording = No Recording setting found
ap-southeast-2:
  default - Recording = No Recording setting found
ca-central-1:
  default - Recording = No Recording setting found
eu-central-1:
  default - Recording = No Recording setting found
eu-north-1:
  No matches found.
eu-west-1:
  No matches found.
eu-west-2:
  default - Recording = No Recording setting found
eu-west-3:
  default - Recording = No Recording setting found
sa-east-1:
  No matches found.
us-east-1:
  security-config-recorder - Recording = No Recording setting found
us-east-2:
  default - Recording = true
us-west-1:
  No matches found.
us-west-2:
  No matches found.


-------------------------
FAILED - 'Review defined S3 Bucket'
ap-northeast-1:
  No lines matching regex found. 
ap-northeast-2:
  No lines matching regex found. 
ap-northeast-3:
  No lines matching regex found. 
ap-south-1:
  No lines matching regex found. 
eu-north-1:
  No lines matching regex found. 
eu-west-1:
  No lines matching regex found. 
sa-east-1:
  No lines matching regex found. 
us-west-1:
  No lines matching regex found. 
us-west-2:
  No lines matching regex found. 

ap-northeast-1:
  No matches found.
ap-northeast-2:
  No matches found.
ap-northeast-3:
  No matches found.
ap-south-1:
  No matches found.
ap-southeast-1:
  default - S3 Bucket = vwops.ap-southeast-1
ap-southeast-2:
  default - S3 Bucket = vwops.ap-southeast-2
ca-central-1:
  default - S3 Bucket = vwops.ca-central-1
eu-central-1:
  default - S3 Bucket = vwops.eu-central-1
eu-north-1:
  No matches found.
eu-west-1:
  No matches found.
eu-west-2:
  default - S3 Bucket = vwops.eu-west-2
eu-west-3:
  default - S3 Bucket = vwops.eu-west-3
sa-east-1:
  No matches found.
us-east-1:
  security-config-recorder-delivery - S3 Bucket = vwops.us-east-1
us-east-2:
  default - S3 Bucket = vwops.us-east-2
us-west-1:
  No matches found.
us-west-2:
  No matches found.


-------------------------
FAILED - 'Review defined SNS Topic'
ap-northeast-1:
  No lines matching regex found. 
ap-northeast-2:
  No lines matching regex found. 
ap-northeast-3:
  No lines matching regex found. 
ap-south-1:
  No lines matching regex found. 
eu-north-1:
  No lines matching regex found. 
eu-west-1:
  No lines matching regex found. 
sa-east-1:
  No lines matching regex found. 
us-west-1:
  No lines matching regex found. 
us-west-2:
  No lines matching regex found. 

ap-northeast-1:
  No matches found.
ap-northeast-2:
  No matches found.
ap-northeast-3:
  No matches found.
ap-south-1:
  No matches found.
ap-southeast-1:
  default - SNS Topic ARN = arn:aws:sns:ap-southeast-1:623976975596:AWSConfig-Notifications
ap-southeast-2:
  default - SNS Topic ARN = arn:aws:sns:ap-southeast-2:623976975596:AWSConfig-Notifications
ca-central-1:
  default - SNS Topic ARN = arn:aws:sns:ca-central-1:623976975596:AWSConfig-Notifications
eu-central-1:
  default - SNS Topic ARN = arn:aws:sns:eu-central-1:623976975596:AWSConfig-Notifications
eu-north-1:
  No matches found.
eu-west-1:
  No matches found.
eu-west-2:
  default - SNS Topic ARN = arn:aws:sns:eu-west-2:623976975596:AWSConfig-Notifications
eu-west-3:
  default - SNS Topic ARN = arn:aws:sns:eu-west-3:623976975596:AWSConfig-Notifications
sa-east-1:
  No matches found.
us-east-1:
  security-config-recorder-delivery - SNS Topic ARN = arn:aws:sns:us-east-1:623976975596:AWSConfig-Notifications
us-east-2:
  default - SNS Topic ARN = arn:aws:sns:us-east-2:623976975596:AWSConfig-Notifications
us-west-1:
  No matches found.
us-west-2:
  No matches found.
",N/A,,,d01bf204-427a-5177-a7b5-6da1c76f8dcd,,,amazon aws,,,,Policy Compliance,0,0,,,0,0,,,,2024-10-01T09:00:16.032Z,2024-10-01T09:10:27.157Z,null,,,template-5c9b270a-a184-2ba3-22de-3a8c0221d4daad6b27cc0b518808,1bc01c9b-fef6-43b8-a79e-1b876b79ace5,2024-10-01T09:11:31.844Z,,,FALSE,None,null,null,,39,local,$Revision: 1.475 $,,2024-09-26T00:00:00Z,2014-04-15T00:00:00Z,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,
72426,,0,Medium,amazon aws,tcp,0,Amazon AWS Compliance Checks,Compliance checks for Amazon Web Services.,"""3.9 Ensure that Object-level logging for read events is enabled for S3 bucket: [WARNING]""

S3 object-level API operations such as GetObject, DeleteObject, and PutObject are called data events. By default, CloudTrail trails don't log data events and so it is recommended to enable Object-level logging for S3 buckets.

Rationale:

Enabling object-level logging will help you meet data compliance requirements within your organization, perform comprehensive security analysis, monitor specific patterns of user behavior in your AWS account or take immediate actions on any object-level API activity using Amazon CloudWatch Events.

Impact:

Enabling logging for these object level events may significantly increase the number of events logged and may incur additional cost.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance.

Solution:
From Console:

Login to the AWS Management Console and navigate to S3 dashboard at https://console.aws.amazon.com/s3/

In the left navigation panel, click buckets and then click on the S3 Bucket Name that you want to examine.

Click Properties tab to see in detail bucket configuration.

In the AWS Cloud Trail data events' section select the CloudTrail name for the recording activity. You can choose an existing Cloudtrail or create a new one by slicking the Configure in Cloudtrailbutton or navigating to the Cloudtrail console linkhttps://console.aws.amazon.com/cloudtrail/'

Once the Cloudtrail is selected, Select the data Data Events check box.

Select S3 from the 'Data event type drop down.

Select Log all events from the Log selector template drop down.

Repeat steps 2 to 5 to enable object-level logging of write events for other S3 buckets.

From Command Line:

To enable object-level data events logging for S3 buckets within your AWS account, run put-event-selectors command using the name of the trail that you want to reconfigure as identifier:

aws cloudtrail put-event-selectors --region <region-name> --trail-name <trail-name> --event-selectors '[{ 'ReadWriteType': 'ReadOnly', 'IncludeManagementEvents':true, 'DataResources': [{ 'Type': 'AWS::S3::Object', 'Values': ['arn:aws:s3:::<s3-bucket-name>/'] }] }]'

The command output will be object-level event trail configuration.

If you want to enable it for all buckets at once then change Values parameter to ['arn:aws:s3'] in command given above.

Repeat step 1 for each s3 bucket to update object-level logging of read events.

Change the AWS region by updating the --region command parameter and perform the process for other regions.

See Also:
https://workbench.cisecurity.org/benchmarks/14207

Reference:
800-171|3.3.1, 800-171|3.3.2, 800-171|3.3.6, 800-53|AU-3, 800-53|AU-3(1), 800-53|AU-7, 800-53|AU-12, 800-53r5|AU-3, 800-53r5|AU-3(1), 800-53r5|AU-7, 800-53r5|AU-12, CN-L3|7.1.2.3(a), CN-L3|7.1.2.3(b), CN-L3|7.1.2.3(c), CN-L3|7.1.3.3(a), CN-L3|7.1.3.3(b), CN-L3|8.1.4.3(b), CSCv7|6.2, CSCv7|6.3, CSCv8|8.5, CSF|DE.CM-1, CSF|DE.CM-3, CSF|DE.CM-7, CSF|PR.PT-1, CSF|RS.AN-3, GDPR|32.1.b, HIPAA|164.306(a)(1), HIPAA|164.312(b), ITSG-33|AU-3, ITSG-33|AU-3(1), ITSG-33|AU-7, ITSG-33|AU-12, LEVEL|2A, NESA|T3.6.2, NIAv2|AM34a, NIAv2|AM34b, NIAv2|AM34c, NIAv2|AM34d, NIAv2|AM34e, NIAv2|AM34f, NIAv2|AM34g, PCI-DSSv3.2.1|10.1, PCI-DSSv3.2.1|10.3, PCI-DSSv3.2.1|10.3.1, PCI-DSSv3.2.1|10.3.2, PCI-DSSv3.2.1|10.3.3, PCI-DSSv3.2.1|10.3.4, PCI-DSSv3.2.1|10.3.5, PCI-DSSv3.2.1|10.3.6, PCI-DSSv4.0|10.2.2, QCSC-v1|3.2, QCSC-v1|6.2, QCSC-v1|8.2.1, QCSC-v1|10.2.1, QCSC-v1|11.2, QCSC-v1|13.2, SWIFT-CSCv1|6.4

Policy Value:
WARNING

Actual Value:
WARNING",N/A,,,d01bf204-427a-5177-a7b5-6da1c76f8dcd,,,amazon aws,,,,Policy Compliance,0,0,,,0,0,,,,2024-10-01T09:00:16.032Z,2024-10-01T09:10:27.157Z,null,,,template-5c9b270a-a184-2ba3-22de-3a8c0221d4daad6b27cc0b518808,1bc01c9b-fef6-43b8-a79e-1b876b79ace5,2024-10-01T09:11:31.844Z,,,FALSE,None,null,null,,39,local,$Revision: 1.475 $,,2024-09-26T00:00:00Z,2014-04-15T00:00:00Z,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,
72426,,0,Medium,amazon aws,tcp,0,Amazon AWS Compliance Checks,Compliance checks for Amazon Web Services.,"""4.9 Ensure AWS Config configuration changes are monitored: [WARNING]""

Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs, or an external Security information and event management (SIEM) environment, and establishing corresponding metric filters and alarms.

It is recommended that a metric filter and alarm be established for detecting changes to AWS Config's configurations.

Rationale:

Monitoring changes to AWS Config configuration will help ensure sustained visibility of configuration items within the AWS account.

CloudWatch is an AWS native service that allows you to observe and monitor resources and applications. CloudTrail Logs can also be sent to an external Security information and event management (SIEM) environment for monitoring and alerting.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance.

Solution:
If you are using CloudTrails and CloudWatch, perform the following to setup the metric filter, alarm, SNS topic, and subscription:

Create a metric filter based on filter pattern provided which checks for AWS Configuration changes and the <cloudtrail_log_group_name> taken from audit step 1.

aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name> --filter-name  '<aws_config_changes_metric>'  --metric-transformations metricName= '<aws_config_changes_metric>' ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventSource = config.amazonaws.com) && (($.eventName=StopConfigurationRecorder)||($.eventName=DeleteDeliveryChannel)||($.eventName=PutDeliveryChannel)||($.eventName=PutConfigurationRecorder)) }'

Note: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.

Create an SNS topic that the alarm will notify

aws sns create-topic --name <sns_topic_name>

Note: you can execute this command once and then re-use the same topic for all monitoring alarms.

Create an SNS subscription to topic created in step 2

aws sns subscribe --topic-arn <sns_topic_arn> --protocol <protocol_for_sns> --notification-endpoint <sns_subscription_endpoints>

Note: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.

Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2

aws cloudwatch put-metric-alarm --alarm-name  '<aws_config_changes_alarm>'  --metric-name  '<aws_config_changes_metric>'  --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions <sns_topic_arn>

See Also:
https://workbench.cisecurity.org/benchmarks/14207

Reference:
800-171|3.3.1, 800-171|3.3.2, 800-171|3.3.6, 800-53|AU-6, 800-53|AU-6(1), 800-53|AU-7(1), 800-53r5|AU-6, 800-53r5|AU-6(1), 800-53r5|AU-7(1), CCE|CCE-79194-7, CN-L3|7.1.2.3(c), CN-L3|7.1.3.3(d), CSCv7|1.4, CSCv7|11.2, CSCv7|16.1, CSCv8|8.11, CSF|DE.AE-2, CSF|DE.AE-3, CSF|DE.DP-4, CSF|PR.PT-1, CSF|RS.AN-1, CSF|RS.AN-3, CSF|RS.CO-2, GDPR|32.1.b, HIPAA|164.306(a)(1), HIPAA|164.312(b), ITSG-33|AU-6, ITSG-33|AU-6(1), ITSG-33|AU-7(1), LEVEL|2M, NESA|M5.2.5, QCSC-v1|5.2.3, QCSC-v1|8.2.1, QCSC-v1|10.2.1, QCSC-v1|11.2, QCSC-v1|13.2, SWIFT-CSCv1|6.4

Policy Value:
WARNING

Actual Value:
WARNING",N/A,,,d01bf204-427a-5177-a7b5-6da1c76f8dcd,,,amazon aws,,,,Policy Compliance,0,0,,,0,0,,,,2024-10-01T09:00:16.032Z,2024-10-01T09:10:27.157Z,null,,,template-5c9b270a-a184-2ba3-22de-3a8c0221d4daad6b27cc0b518808,1bc01c9b-fef6-43b8-a79e-1b876b79ace5,2024-10-01T09:11:31.844Z,,,FALSE,None,null,null,,39,local,$Revision: 1.475 $,,2024-09-26T00:00:00Z,2014-04-15T00:00:00Z,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,
72426,,0,None,amazon aws,tcp,0,Amazon AWS Compliance Checks,Compliance checks for Amazon Web Services.,"""3.2 Ensure CloudTrail log file validation is enabled: [PASSED]""

CloudTrail log file validation creates a digitally signed digest file containing a hash of each log that CloudTrail writes to S3. These digest files can be used to determine whether a log file was changed, deleted, or unchanged after CloudTrail delivered the log. It is recommended that file validation be enabled on all CloudTrails.

Rationale:

Enabling log file validation will provide additional integrity checking of CloudTrail logs.

Solution:
Perform the following to enable log file validation on a given trail:
From Console:

Sign in to the AWS Management Console and open the IAM console at https://console.aws.amazon.com/cloudtrail

Click on Trails on the left navigation pane

Click on target trail

Within the General details section click edit

Under the Advanced settings section

Check the enable box under Log file validation

Click Save changes

From Command Line:

aws cloudtrail update-trail --name <trail_name> --enable-log-file-validation

Note that periodic validation of logs using these digests can be performed by running the following command:

aws cloudtrail validate-logs --trail-arn <trail_arn> --start-time <start_time> --end-time <end_time>

Default Value:

Not Enabled

See Also:
https://workbench.cisecurity.org/benchmarks/14207

Reference:
800-171|3.3.1, 800-171|3.3.2, 800-171|3.3.6, 800-53|AU-6, 800-53|AU-6(1), 800-53|AU-7(1), 800-53r5|AU-6, 800-53r5|AU-6(1), 800-53r5|AU-7(1), CCE|CCE-78914-9, CN-L3|7.1.2.3(c), CN-L3|7.1.3.3(d), CSCv7|6, CSCv8|8.11, CSF|DE.AE-2, CSF|DE.AE-3, CSF|DE.DP-4, CSF|PR.PT-1, CSF|RS.AN-1, CSF|RS.AN-3, CSF|RS.CO-2, GDPR|32.1.b, HIPAA|164.306(a)(1), HIPAA|164.312(b), ITSG-33|AU-6, ITSG-33|AU-6(1), ITSG-33|AU-7(1), LEVEL|2A, NESA|M5.2.5, QCSC-v1|5.2.3, QCSC-v1|8.2.1, QCSC-v1|10.2.1, QCSC-v1|11.2, QCSC-v1|13.2, SWIFT-CSCv1|6.4

Policy Value:
CLOUDTRAIL
aws_action: DescribeTrails
regex: LogFileValidationEnabled = 
expect: LogFileValidationEnabled = true

Actual Value:
ap-northeast-1:
  cloudtrail-api-logs - LogFileValidationEnabled = true
ap-northeast-2:
  cloudtrail-api-logs - LogFileValidationEnabled = true
ap-northeast-3:
  cloudtrail-api-logs - LogFileValidationEnabled = true
ap-south-1:
  cloudtrail-api-logs - LogFileValidationEnabled = true
ap-southeast-1:
  cloudtrail-api-logs - LogFileValidationEnabled = true
ap-southeast-2:
  cloudtrail-api-logs - LogFileValidationEnabled = true
ca-central-1:
  cloudtrail-api-logs - LogFileValidationEnabled = true
eu-central-1:
  cloudtrail-api-logs - LogFileValidationEnabled = true
eu-north-1:
  cloudtrail-api-logs - LogFileValidationEnabled = true
eu-west-1:
  cloudtrail-api-logs - LogFileValidationEnabled = true
eu-west-2:
  cloudtrail-api-logs - LogFileValidationEnabled = true
eu-west-3:
  cloudtrail-api-logs - LogFileValidationEnabled = true
sa-east-1:
  cloudtrail-api-logs - LogFileValidationEnabled = true
us-east-1:
  cloudtrail-api-logs - LogFileValidationEnabled = true
us-east-2:
  cloudtrail-api-logs - LogFileValidationEnabled = true
us-west-1:
  cloudtrail-api-logs - LogFileValidationEnabled = true
us-west-2:
  cloudtrail-api-logs - LogFileValidationEnabled = true",N/A,,,d01bf204-427a-5177-a7b5-6da1c76f8dcd,,,amazon aws,,,,Policy Compliance,0,0,,,0,0,,,,2024-10-01T09:00:16.032Z,2024-10-01T09:10:27.157Z,null,,,template-5c9b270a-a184-2ba3-22de-3a8c0221d4daad6b27cc0b518808,1bc01c9b-fef6-43b8-a79e-1b876b79ace5,2024-10-01T09:11:31.844Z,,,FALSE,None,null,null,,39,local,$Revision: 1.475 $,,2024-09-26T00:00:00Z,2014-04-15T00:00:00Z,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,